{"ast":null,"code":"var _jsxFileName = \"/home/er/Bureau/VS Code/projet test/protg/src/context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport logo2 from './logo2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(props) {\n  _s();\n\n  const smallLogo = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: logo2,\n    alt: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 18\n  }, this);\n\n  const myRef = useRef(null);\n\n  const executeScroll = () => myRef.current.scrollIntoView();\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      smallLogo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 1\n  }, this);\n}\n\n_s(ContextProvider, \"wYF4W973D0682KeLHvb0qnH30CA=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/er/Bureau/VS Code/projet test/protg/src/context.js"],"names":["React","logo2","Context","createContext","ContextProvider","props","smallLogo","myRef","useRef","executeScroll","current","scrollIntoView","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAGhC,QAAMC,SAAS,gBAAE;AAAK,IAAA,GAAG,EAAEL,KAAV;AAAiB,IAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,UAAjB;;AACA,QAAMM,KAAK,GAAGC,MAAM,CAAC,IAAD,CAApB;;AAGI,QAAMC,aAAa,GAAG,MAAMF,KAAK,CAACG,OAAN,CAAcC,cAAd,EAA5B;;AAEJ,sBACA,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACL,MAAAA;AAAD,KAAzB;AAAA,cACCD,KAAK,CAACO;AADP;AAAA;AAAA;AAAA;AAAA,UADA;AAKC;;GAdQR,e;;KAAAA,e;AAgBT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React from \"react\"\nimport logo2 from './logo2.png'\n\nconst Context = React.createContext()\n\n\nfunction ContextProvider(props) {\n\n\nconst smallLogo= <img src={logo2} alt='' />\nconst myRef = useRef(null)\n \n\n    const executeScroll = () => myRef.current.scrollIntoView() \n\nreturn (\n<Context.Provider value={{smallLogo}}>\n{props.children}\n</Context.Provider>\n)\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}